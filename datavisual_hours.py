# -*- coding: utf-8 -*-
"""DataVisual_Hours.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1onRC74aPJqv4UKFo637oXho8DMYGDIPj
"""

!pip install gdown
!pip install tensorflow-gpu

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import tensorflow as tf
from tensorflow import keras
import pandas as pd
import seaborn as sns
from pylab import rcParams
import matplotlib.pyplot as plt
from matplotlib import rc
from sklearn.model_selection import train_test_split
from pandas.plotting import register_matplotlib_converters

# %matplotlib inline
# %config InlineBackend.figure_format='retina'

register_matplotlib_converters()
sns.set(style='whitegrid', palette='muted', font_scale=1.5)

rcParams['figure.figsize'] = 22, 10

RANDOM_SEED = 42

np.random.seed(RANDOM_SEED)
tf.random.set_seed(RANDOM_SEED)

!gdown --id 1PScwilohnTYliPWOlF9w2yz0acRi5Icg --output Operations-Dem-Planning_-BikeShare_transformed_dataset.csv

bike = pd.read_csv(
  "Operations-Dem-Planning_-BikeShare_transformed_dataset.csv", 
  parse_dates=['Date'], 
  index_col="Date"
)

bike.shape

bike.head

bike.dtypes

bike['Day_of_Week']=bike['Day_of_Week'].astype(np.object)
print(bike['Day_of_Week'])

bike['Riders']=bike['Riders'].astype(np.int64)
print(bike['Riders'])

bike['Temperature']=bike['Temperature'].astype(np.float64)
print(bike['Temperature'])

bike.dtypes

print(bike)

bike['day_of_month'] = bike.index.day
bike['Day_of_Week'] = bike.index.dayofweek
bike['Month'] = bike.index.month

sns.lineplot(x=bike.index, y="Riders", data=bike);

bike_by_Month = bike.resample('M').sum()

sns.lineplot(x=bike_by_Month.index, y="Riders", data=bike_by_Month);

fig,(ax1, ax2, ax3, ax4)= plt.subplots(nrows=4)
fig.set_size_inches(16, 23)
sns.pointplot(data=bike, x='Hour', y='Riders', ax=ax1)
sns.pointplot(data=bike, x='Hour', y='Riders', hue='Holiday', ax=ax2)
sns.pointplot(data=bike, x='Hour', y='Riders', hue='Workday', ax=ax3)
sns.pointplot(data=bike, x='Hour', y='Riders', hue='Season_Name', ax=ax4);

fig,(ax1, ax2,ax3)= plt.subplots(nrows=3)
fig.set_size_inches(18, 14)

sns.pointplot(data=bike, x='Weekday', y='Riders', ax=ax1)
sns.pointplot(data=bike, x='Weekday', y='Riders', hue='Season_Name', ax=ax2)
sns.pointplot(data=bike, x='Season_Name', y='Riders', hue='Weekday', ax=ax3);

sns.pairplot(bike)

plt.figure(figsize = (15,10))
sns.violinplot(x = bike['Month_Name'] , y = 'Riders', data = bike);

sns.lmplot(data=bike, x="Weekday", y="Riders", col="Hour", hue="Temperature")

sns.catplot(data=bike, kind="swarm", x="Day_of_Week", y="Riders", hue="Workday")